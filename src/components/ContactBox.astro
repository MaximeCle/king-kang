<div class="stack-row--mobile-column contact-box-container fade-in">
  <div class="cooordonnes-container">
    <h3 class="subtitle-light">Contactez-nous</h3>
    <div class="coordonnees-content stack-column gap-2">
      <p class="coordonnees-title">Nos coordonnées</p>
      <div class="stack-column coordonnes-container">
        <p class="label-coordonnees">Téléphone</p>
        <p class="coordonnees" data-copy="06 09 54 21 74">06 09 54 21 74</p>
      </div>

      <div class="stack-column coordonnes-container">
        <p class="label-coordonnees">Adresse postale</p>
        <p
          class="coordonnees"
          data-copy="1&2 bis, Rue Antoine Laurent de Lavoisier 76300 Sotteville-lès-Rouen"
        >
          1&2 bis, Rue Antoine Laurent de Lavoisier 76300 Sotteville-lès-Rouen
        </p>
      </div>
    </div>
  </div>
  <form id="contactForm" class="form-container stack-column gap-4">
    <div class="stack-column gap-0-5">
      <label>Nom</label>
      <input type="text" name="name" />
    </div>
    <div class="stack-column gap-0-5">
      <label>Adresse email <span class="required-indicator">*</span></label>
      <input type="email" name="email" required="required" />
    </div>
    <div class="stack-column gap-0-5">
      <label>Téléphone <span class="required-indicator">*</span></label>
      <input type="tel" name="phone" required="required" />
    </div>
    <div class="stack-column gap-0-5">
      <label>Message <span class="required-indicator">*</span></label>
      <textarea name="message" required="required"></textarea>
    </div>
    <div class="flex-justify-end">
      <button class="button" type="submit">Envoyer le message</button>
    </div>
  </form>
  <img src="/kangaroo.svg" class="kangaroo-illustration" />
</div>

<div id="toastContainer" class="toast-container"></div>

<style is:global>
  .contact-box-container {
    padding: var(--space-6) var(--space-8);
    background-color: rgba(88, 111, 131, 0.25);
    border-radius: var(--border-radius-md);
    border: 1px solid;
    border-color: rgba(255, 255, 255, 0.2);
    max-width: 1080px;
    margin: var(--space-xl) auto;
    position: relative;
    gap: var(--space-8);
  }
  .coordonnees-title {
    color: var(--color-border);
    font-weight: 600;
    font-size: var(--font-size-lg);
  }
  .label-coordonnees {
    font-weight: 600;
    color: var(--color-border);
    font-size: var(--font-size-sm);
  }
  .coordonnees {
    color: var(--color-border);
    font-size: var(--font-size-sm);
  }
  .coordonnees-content {
    margin-top: var(--space-8);
  }
  .cooordonnes-container {
    max-width: 350px;
  }
  .form-container {
    flex: 1;
  }
  .kangaroo-illustration {
    position: absolute;
    bottom: 0;
    left: 64px;
    opacity: 0.3;
    height: 58px;
  }
  .required-indicator {
    color: #e53e3e;
    font-size: var(--font-size-xs);
  }
  .toast-container {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9999;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .toast {
    min-width: 250px;
    padding: var(--space-2) var(--space-2-5);
    border-radius: var(--border-radius-md);
    display: flex;
    align-items: center;
    gap: 12px;
    animation: slideIn 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    font-size: var(--font-size-sm);
  }

  .toast-success {
    background-color: #e2f6e2;
    color: #007f00;
  }

  .toast-error {
    background-color: #ffedeb;
    color: #d91414;
  }

  .toast-icon {
    font-size: 20px;
    flex-shrink: 0;
  }

  .toast-message {
    flex: 1;
  }

  .coordonnees {
    cursor: pointer;
    position: relative;
    transition: opacity 0.3s ease;
  }

  .coordonnees:hover {
    opacity: 0.75;
  }

  .copied-tooltip {
    position: absolute;
    top: 0px;
    left: 20%;
    transform: translateX(-50%);
    background: rgba(26, 126, 194);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.8rem;
    pointer-events: none;
    opacity: 0;
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;
    white-space: nowrap;
  }
  .copied-tooltip.show {
    opacity: 1;
    transform: translateX(-50%) translateY(-5px);
  }

  .coordonnes-container {
    position: relative;
  }

  @keyframes slideIn {
    from {
      transform: translateY(100px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes slideOut {
    from {
      transform: translateY(0);
      opacity: 1;
    }
    to {
      transform: translateY(100px);
      opacity: 0;
    }
  }

  .toast-removing {
    animation: slideOut 0.5s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards;
  }

  @media (max-width: 1024px) {
    .coordonnees-content {
      margin-top: var(--space-8);
    }
    .contact-box-container {
      padding: 0;
      border: none;
      background: none;
      margin: var(--space-5) var(--space-3-5);
      gap: var(--space-4);
    }
    .kangaroo-illustration {
      display: none;
    }
  }
</style>

<script>
  // Envoi formulaire
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("contactForm") as HTMLFormElement;
    if (!form) return;

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(form);

      // Désactiver le bouton pendant l'envoi
      const submitBtn = form.querySelector(
        'button[type="submit"]',
      ) as HTMLButtonElement;
      if (!submitBtn) return;

      const originalText = submitBtn.textContent;
      submitBtn.disabled = true;
      submitBtn.textContent = "Envoi en cours...";

      try {
        const res = await fetch("https://formcarry.com/s/fTbijvM2vnq", {
          method: "POST",
          body: formData,
          headers: { Accept: "application/json" },
        });

        const data = await res.json();

        if (data.code === 200) {
          form.reset();
          showToast("Message envoyé avec succès !", "success");
        } else {
          showToast(
            "Erreur lors de l'envoi du message. Veuillez réessayer.",
            "error",
          );
        }
      } catch (error) {
        showToast(
          "Erreur de connexion. Veuillez vérifier votre connexion internet.",
          "error",
        );
      } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = originalText;
      }
    });
  });

  // Toast
  function showToast(message: string, type = "success") {
    const container = document.getElementById("toastContainer");
    if (!container) return;

    const toast = document.createElement("div");
    toast.className = `toast toast-${type}`;

    const icon = type === "success" ? "✓" : "✕";

    toast.innerHTML = `
      <span class="toast-icon">${icon}</span>
      <span class="toast-message">${message}</span>
    `;

    container.appendChild(toast);

    setTimeout(() => removeToast(toast), 3000);
  }

  function removeToast(toast: HTMLElement) {
    toast.classList.add("toast-removing");
    setTimeout(() => toast.remove(), 300);
  }

  // Copie coordonnées
  document.addEventListener("DOMContentLoaded", () => {
    const coordonneesElems: NodeListOf<HTMLElement> =
      document.querySelectorAll(".coordonnees");

    coordonneesElems.forEach((el: HTMLElement) => {
      el.addEventListener("click", async () => {
        const textToCopy = el.dataset.copy || el.textContent;

        try {
          await navigator.clipboard.writeText(textToCopy);

          const tooltip = document.createElement("span");
          tooltip.className = "copied-tooltip";
          tooltip.textContent = "Copié !";
          el?.parentElement?.appendChild(tooltip);

          requestAnimationFrame(() => tooltip.classList.add("show"));

          setTimeout(() => {
            tooltip.classList.remove("show");
            setTimeout(() => tooltip.remove(), 300);
          }, 1500);
        } catch (err) {
          console.error("Erreur lors de la copie :", err);
        }
      });
    });
  });
</script>
