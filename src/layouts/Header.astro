---
const path = Astro.url.pathname;
const isBlog = path.startsWith("/blog");

const isActiveItem = (href: string, currentPath: string) => {
  if (href.startsWith("#")) {
    return false;
  }
  if (currentPath === href) {
    return true;
  }
  if (href !== "/" && currentPath.startsWith(href + "/")) {
    return true;
  }
  return false;
};
---

<header
  id="header"
  class={`header header-transparent ${isBlog ? "header-content-primary" : "header-content-white"}`}
  style={isBlog
    ? "border-bottom: 1px solid #e5e5e6;"
    : "border-bottom: 1px solid rgba(255, 255, 255, 0.1);"}
>
  <div class="menu-container">
    <div class="logo">
      <a href="/" class="logo-link">
        <div class="logo-image-container">
          <img src="/logo-king-kang.svg" class="logo-white" />
          <img src="/king-kang-logo-grey.svg" class="logo-grey" />
        </div>
        <p>King Kang</p>
      </a>
    </div>
    <div class="stack-row gap-5 actions-menu">
      <nav class="stack-row" style={{ alignItems: "center" }}>
        <ul class="menu">
          <li>
            <a href="/" class="menu-item" data-section="accueil"> Accueil </a>
          </li>
          <li>
            <a
              href="/#fonctionnalités"
              class="menu-item"
              data-section="fonctionnalités"
            >
              Fonctionnalités
            </a>
          </li>
          <li>
            <a href="/#prix" class="menu-item" data-section="prix"> Prix </a>
          </li>
          <li>
            <a
              href="/blog"
              class={`menu-item ${isActiveItem("/blog", path) ? "menu-item-active" : ""}`}
              data-section="blog"
            >
              Blog
            </a>
          </li>
          <li>
            <a
              href="/contact"
              class={`menu-item ${isActiveItem("/contact", path) ? "menu-item-active" : ""}`}
              data-section="contact"
            >
              Contact
            </a>
          </li>
        </ul>
      </nav>
      <a href="https://www.kingkang.app/connexion">
        <button class="button">Se connecter</button>
      </a>
    </div>

    <button class="burger-button" id="burger-button" aria-label="Menu">
      <div class="stack flex-align-center gap-1-5">
        <div class="burger-lines">
          <span class="burger-line"></span>
          <span class="burger-line"></span>
          <span class="burger-line"></span>
        </div>
        <p>Menu</p>
      </div>
    </button>
  </div>
</header>

<div class="mobile-menu" id="mobile-menu">
  <nav class="mobile-nav">
    <ul class="mobile-menu-list">
      <li>
        <a href="/" class="mobile-menu-item" data-section="accueil">Accueil</a>
      </li>
      <li>
        <a
          href="/#fonctionnalités"
          class="mobile-menu-item"
          data-section="fonctionnalités"
        >
          Fonctionnalités
        </a>
      </li>
      <li>
        <a href="/#prix" class="mobile-menu-item" data-section="prix">Prix</a>
      </li>
      <li>
        <a
          href="/blog"
          class={`mobile-menu-item ${isActiveItem("/blog", path) ? "mobile-menu-item-active" : ""}`}
          data-section="blog"
        >
          Blog
        </a>
      </li>
      <li>
        <a
          href="/contact"
          class={`mobile-menu-item ${isActiveItem("/contact", path) ? "mobile-menu-item-active" : ""}`}
          data-section="contact"
        >
          Contact
        </a>
      </li>
    </ul>
    <button class="button mobile-login-button">Se connecter</button>
  </nav>
</div>

<style>
  .header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    left: 0;
    z-index: 1001;
    align-items: center;
    padding-top: var(--space-1);
    padding-bottom: var(--space-1);
    padding-left: var(--space-2-5);
    padding-right: var(--space-2-5);
    transition:
      transform 0.3s ease,
      background 0.3s ease;
  }

  .header-transparent {
    background: transparent;
    color: white;
  }

  .header-white {
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  }

  .header-content-white {
    color: white;
  }

  .header-content-primary {
    color: var(--color-text-primary);
  }

  .hidden {
    transform: translateY(-100%);
  }

  .logo-grey {
    display: none;
  }

  .header-content-primary .logo-grey {
    display: inline;
  }

  .header-content-primary .logo-white {
    display: none;
  }

  .logo-image-container {
    width: 40px;
    margin-right: var(--space-2);
  }

  .logo-link {
    display: flex;
    justify-content: center;
    align-items: center;
    color: inherit;
    font-size: 20px;
    opacity: 0.8;
  }

  .logo-image-container > img {
    height: 52px;
  }

  .menu-container {
    max-width: 1380px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    flex: 1;
    margin-left: auto;
    margin-right: auto;
  }

  .menu {
    display: flex;
    gap: var(--space-6);
    color: inherit;
    align-items: center;
    font-size: var(--font-size-sm);
  }

  .menu-item {
    color: inherit;
    mix-blend-mode: difference;
    font-weight: 300;
    text-decoration: none;
    transition:
      opacity 0.3s ease,
      font-weight 0.2s ease;
  }

  .menu-item:hover {
    opacity: 0.65;
  }

  .menu-item-active {
    font-weight: 600;
    opacity: 1;
  }

  .menu-item-active:hover {
    opacity: 0.85;
  }

  .burger-button {
    display: none;
    justify-content: space-between;
    gap: var(--space-1);
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1001;
    color: inherit;
  }

  .burger-button p {
    line-height: normal;
  }

  .burger-lines {
    display: flex;
    width: 24px;
    height: 18px;
    flex-direction: column;
    justify-content: space-between;
    color: inherit;
  }

  .burger-line {
    width: 100%;
    height: 2px;
    background-color: currentColor;
    border-radius: 2px;
    transition: all 0.3s ease;
    transform-origin: center;
    border-radius: 2px;
  }

  .burger-button.active .burger-line:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }

  .burger-button.active .burger-line:nth-child(2) {
    opacity: 0;
  }

  .burger-button.active .burger-line:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }

  .burger-button.active {
    color: var(--color-text-primary);
  }

  .mobile-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: var(--color-background, #ffffff);
    z-index: 1000;
    display: none;
    opacity: 0;
    transition: opacity 0.3s ease;
    overflow: hidden;
  }

  .header.active .logo-grey {
    display: inline;
  }

  .header.active .logo-white {
    display: none;
  }

  .header.active .logo {
    color: var(--color-text-primary);
  }

  .mobile-menu.active {
    display: flex;
    opacity: 1;
  }

  .mobile-nav {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    padding: var(--space-4);
    padding-top: 100px;
  }

  .mobile-menu-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
    list-style: none;
    padding: 0;
    margin: 0;
    text-align: center;
  }

  .mobile-menu-item {
    color: var(--color-text-primary);
    font-size: var(--font-size-lg);
    text-decoration: none;
    transition: opacity 0.3s ease;
  }

  .mobile-menu-item:hover {
    opacity: 0.65;
  }

  .mobile-menu-item-active {
    font-weight: 600;
  }

  .mobile-login-button {
    margin-top: var(--space-6);
  }

  @media (min-width: 2000px) {
    .menu-container {
      max-width: 1920px;
      margin-left: auto;
      margin-right: auto;
    }
  }

  /* Mobile */
  @media (max-width: 767px) {
    .actions-menu {
      display: none;
    }

    .burger-button {
      display: flex;
    }

    .logo-image-container {
      width: 32px;
    }
    .logo-image-container > img {
      height: 48px;
    }
  }
</style>

<script>
  const header = document.getElementById("header");
  const sections = ["accueil", "fonctionnalités", "prix"];
  const burgerButton = document.getElementById("burger-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const mobileMenuItems = document.querySelectorAll(".mobile-menu-item");

  burgerButton?.addEventListener("click", () => {
    burgerButton.classList.toggle("active");
    mobileMenu?.classList.toggle("active");
    header?.classList.toggle("active");

    if (mobileMenu?.classList.contains("active")) {
      document.documentElement.style.overflow = "hidden";
    } else {
      document.documentElement.style.overflow = "";
    }
  });

  // Close menu when clicking on a link
  mobileMenuItems.forEach((item) => {
    item.addEventListener("click", () => {
      const href = item.getAttribute("href");
      if (href && href.includes("#") && href !== "/") {
        burgerButton?.classList.remove("active");
        mobileMenu?.classList.remove("active");
        document.documentElement.style.overflow = "";
      }
    });
  });

  // Gestion du background du header au scroll
  const updateHeaderBackground = () => {
    if (window.scrollY > 100) {
      header?.classList.add("header-white");
      header?.classList.remove("header-transparent");
    } else {
      header?.classList.add("header-transparent");
      header?.classList.remove("header-white");
    }
  };

  // Gestion du thème (couleur du texte) selon les zones
  const updateHeaderTheme = () => {
    const zones = document.querySelectorAll<HTMLElement>("[data-theme]");
    const currentZone = [...zones].find((zone) => {
      const rect = zone.getBoundingClientRect();
      return rect.top <= 100 && rect.bottom >= 100;
    });

    if (currentZone?.dataset?.theme === "dark") {
      header?.classList.add("header-content-white");
      header?.classList.remove("header-content-primary");
    } else {
      header?.classList.add("header-content-primary");
      header?.classList.remove("header-content-white");
    }
  };

  // Gestion de l'état actif des items du menu selon la section visible
  const updateActiveSection = () => {
    const currentPath = window.location.pathname;

    // Ne gérer les sections que sur la page d'accueil
    if (currentPath !== "/") return;

    const menuItems = document.querySelectorAll(".menu-item");
    let activeSection = null;

    // Détecter la section actuellement visible
    for (const sectionId of sections) {
      const section = document.getElementById(sectionId);
      if (section) {
        const rect = section.getBoundingClientRect();
        if (
          rect.top <= window.innerHeight * 0.5 &&
          rect.bottom >= window.innerHeight * 0.3
        ) {
          activeSection = sectionId;
          break;
        }
      }
    }

    // Mettre à jour les classes actives
    menuItems.forEach((item) => {
      const sectionData = item.getAttribute("data-section");

      if (sectionData && sections.includes(sectionData)) {
        if (sectionData === activeSection) {
          item.classList.add("menu-item-active");
        } else {
          item.classList.remove("menu-item-active");
        }
      }
    });
  };

  // Observer pour les animations fade-in
  const initFadeAnimations = () => {
    const faders = document.querySelectorAll(".fade-in");
    const fadeObserver = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            fadeObserver.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.2 },
    );

    faders.forEach((el) => fadeObserver.observe(el));
  };

  window.addEventListener("scroll", () => {
    updateHeaderBackground();
    updateHeaderTheme();
    updateActiveSection();
  });

  document.addEventListener("DOMContentLoaded", () => {
    updateActiveSection();
    initFadeAnimations();
    setTimeout(updateActiveSection, 100);
  });
</script>
